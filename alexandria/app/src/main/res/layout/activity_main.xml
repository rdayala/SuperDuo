<!-- A DrawerLayout is intended to be used as the top-level content view using match_parent for both width and height to consume the full space available. -->
<!-- android:fitsSystemWindows="true" allows the drawer to be drawn below the system bar, which is
        noticeable when the theme has a true translucent status bar enabled. it also prevents the
        toolbar from extending to fill the screen when the soft keyboard comes up. for the latter
        purpose, this property needs to be declared at the root layout that houses a toolbar layout.
      url: http://stackoverflow.com/questions/28043202/android-appcompat-toolbar-stretches-when-searchview-gets-focus -->
<!-- When using alternative layouts, to refer to them as a whole in java, make sure there are
        corresponding rootview types with identical id's, or else the app will crash -->
<FrameLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent" android:layout_height="match_parent">

    <android.support.v4.widget.DrawerLayout
        android:id="@+id/drawer_layout_main"
        android:layout_width="match_parent" android:layout_height="match_parent"
        android:fitsSystemWindows="true">

        <!-- This is for the main content view. Since we are allowing the nav drawer to overlay the
                toolbar, we need to indicate our custom toolbar here -->
        <!-- Attributes android:layout_marginLeft(Start) are used to check if device is a tablet or a
                phone -->
        <LinearLayout
            android:id="@+id/container_content_frame_main"
            android:layout_width="match_parent" android:layout_height="match_parent"
            android:orientation="vertical"
            android:layout_marginLeft="@dimen/navigation_drawer_content_padding"
            android:layout_marginStart="@dimen/navigation_drawer_content_padding">

            <include
                layout="@layout/toolbar_nav"
                android:layout_width="match_parent" android:layout_height="wrap_content"/>

            <!-- This is our main layout container -->
            <FrameLayout
                android:id="@+id/container_fragment_main"
                android:layout_width="match_parent" android:layout_height="match_parent"/>

        </LinearLayout>

        <!-- android:layout_gravity="start" tells DrawerLayout to treat
             this as a sliding drawer on the left side for left-to-right
             languages and on the right side for right-to-left languages.
             If you're not building against API 17 or higher, use
             android:layout_gravity="left" instead. -->
        <android.support.design.widget.NavigationView
            android:id="@+id/nav_view_main"
            android:layout_width="wrap_content" android:layout_height="match_parent"
            android:layout_gravity="start"
            android:background="@color/white"
            app:menu="@menu/menu_nav_drawer"
            app:headerLayout="@layout/nav_drawer_header"/>

    </android.support.v4.widget.DrawerLayout>

</FrameLayout>
